<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="fbd.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>15, 24</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAAAAACoCAAAFgAAACgAAAAgAAAAQAAAAAEACAAAAAAAgAQAAAAAAAAAAAAAAAEAAAAA
        AAAAAAAACB0jAAokLAALPUwADUBOAA9BUAARRFMAFkhVABVIVwAOU2gAD1RpAA1VagASUWMAGFRlABhU
        ZgAZVmcAEVhsABxYaQAbWmwAH1tsABtcbwAdXG4AF15zABFfdgAZXXEAG15xAB1ecQAdX3IAHl9yACNe
        bwASYHcAFGB2AB1gcgAfYXMAGmF0AB1hdQATYnkAE2R8AB1legAeZ3wAGWh+ABhofwAZaH8AHGl+AB5p
        fwAnYnMAIWJ1ACFkdwAiZHcAK2V2ACRnegAlaHsAJml8ABVogAAVaoMAF2qCABlpgAAaaYAAG2mAABlq
        gQAaaoEAGWqCAB1qgQAfa4EAGG2FABpthQAZbYYAHWyEAB5thAAfbYQAG2+IABtwiQAccYkAHHGKAB9y
        igAec4sAH3SNACNrgAAgbYMAIG6EACJuhAAib4UAIHCHACFwhwAicIYAI3CHACJxiAAjcYgAI3KIACRy
        iAAlcokAJnOJACV0iQAmdIoAJ3WLACB1jQAhdo8AJ3WMACR2jgAodowAKXaNACh3jQAqd40AJXiPACN4
        kQAlepIAJHqTACZ8lAAnfpYAKnmQAC16kQAue5EAL3uRAC19kwAqfpYAMX6VADJ/lQAzf5UANH+VACyD
        nAAuhZ4ANoOZADeDmQA4g5kAOYSZADuHnQA8h50APYidAC+HoAAxiaEAM4ukADWNpQA7k6wAP5ewAE+K
        mwBRjJwAU4ycAFWOnwBAi6EAQYyhAEKMoQBDjKEAVo+gAEWQpQBGkKUAR5ClAEqUqQBLlKkATJSpAE+Y
        rQBZkaEAWpOiAFCYrQBUnLEAVZ2yAFmhtgBaobYAXqS4AF6lugBhprkAZKa5AGOqvgBlqb0AZ6u+AGqt
        wABrr8EAaK7CAGyyxgBts8cAcbfLAHK3ywB1u88AdrvPAHe7zwB5v9MAer/TAHu/0wB8v9MAf8PXAIDD
        1wCBxNcAwsLCAP///wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIBwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAY
        KAgFAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOOCkkAAgIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAR
        VjlEOQsACA4AAAAAAAAAAAAAAAAAAAAAAAAAAAATYWFXRTpXFwADDg4AAAAAAAAAAAAAAAAAAAAAAAAd
        Y2NjWU9ZY08lAAAQDgAAAAAAAAAAAAAAAAAAAAAtWmRzZHNkZD5kbjUAAAQfDgAAAAAAAAAAAAAAAAAx
        ZnRbUWZbW3R5b3RvNwC1AAxNAAAAAAAAAAAAAPgAfXp1enV6dXp9enB1enVCALYABSoPAAAAAAAAAAAA
        +ACKe4qKfn5+fnaKiop+ikYAtrUAFiwAAAAAAAAAAAD4AIuPj3+Pj398j398i4t/SQC2tgAGPRwAAAAA
        AAAAAPgAjJCMkpCSkJKSkpKQjJBLALa2tQBBVQAAAAAAAAAA+ACTlZGTlZOVk5ONlZWVk18Atra2AEBI
        FAAAAAAAAAD4AJmYlJmUmZmZmZmZmJiUYAC1AAAnUjZOAQAAAAAAAPgAm5ubm5qbm5ubm5qbm5toAAAI
        JkNHaEwNAAAAAAAA+ACenJ6enJ6enp6enpyenmoAEiNTSmpqagcAAAAAAAD4AKGhoaGhoaGhoaGhoaGh
        awBQYmlrVBoAAPgAAAAAAPgApqenpqampqampqamnYYAAGdsWCAAAPj4AAAAAAAA+ACoqKipqK6oq6mo
        n4cAACFdXAcAAPj4AAAAAAAAAAD4AKqsrK+vr6+qoIgAAC5eXi4AAPj4AAAAAAAAAAAAAPgArbCtsrKt
        ookAAC9lcnd3B/j4AAAAAAAAAAAAAAAA+ACxs7Gxo44AAABteHh4eHh4APgAAAAAAAAAAAAAAAD4ALS0
        pJYAAPj4ADKAgoSFgDIA+AAAAAAAAAAAAAAAAPgApZcAAPj4AAD4B4GDgzMAAPj4AAAAAAAAAAAAAAAA
        +PgAAPj4AAAAAPgAcTQAAPj4AAAAAAAAAAAAAAAAAAAA+Pj4AAAAAAAAAPgAAPj4AAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAPj4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAP//5////4P///4B///4Af//4AD//4AA//4AAH/4AAB/4AAAP8AAAD/AAAAfwAAAH8AA
        AA/AAAAPwAAAB8AAAAfAAAADwAAAA8AAAAfAAAAPwAAAP8AAAP/AAAP/wAAD/8AAA//AMAP/wPAP/+P4
        P////P//////////////////
</value>
  </data>
</root>